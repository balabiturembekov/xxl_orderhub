version: '3.8'

services:
  # Django Web Application
  web:
    build: .
    env_file:
      - docker.env
    volumes:
      - ./media:/app/media
      - ./logs:/app/logs
      - static_files:/app/static
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py compilemessages &&
             python manage.py collectstatic --noinput &&
             python manage.py setup_celery_beat &&
             python manage.py runserver 0.0.0.0:8000"
    networks:
      - xxl_orderhub_network

  # Celery Worker
  worker:
    build: .
    env_file:
      - docker.env
    volumes:
      - ./media:/app/media
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A xxl_orderhub worker --loglevel=info
    networks:
      - xxl_orderhub_network

  # Celery Beat Scheduler
  beat:
    build: .
    env_file:
      - docker.env
    volumes:
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A xxl_orderhub beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    networks:
      - xxl_orderhub_network

  # Flower Monitoring
  flower:
    build: .
    env_file:
      - docker.env
    ports:
      - "5555:5555"
    depends_on:
      - redis
    command: celery -A xxl_orderhub flower --port=5555
    networks:
      - xxl_orderhub_network

volumes:
  postgres_data:
  redis_data:
  static_files:

networks:
  xxl_orderhub_network:
    driver: bridge

#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ XXL OrderHub

echo "üöÄ Starting XXL OrderHub Services..."

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd "$(dirname "$0")"

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
source ../env/bin/activate

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Redis –∑–∞–ø—É—â–µ–Ω
if ! redis-cli ping > /dev/null 2>&1; then
    echo "‚ùå Redis is not running. Starting Redis..."
    brew services start redis
    sleep 2
fi

echo "‚úÖ Redis is running"

# –ó–∞–ø—É—Å–∫–∞–µ–º Django —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–µ
echo "üåê Starting Django server..."
python manage.py runserver 8000 &
DJANGO_PID=$!

# –ó–∞–ø—É—Å–∫–∞–µ–º Celery worker –≤ —Ñ–æ–Ω–µ
echo "üë∑ Starting Celery worker..."
celery -A xxl_orderhub worker --loglevel=info &
WORKER_PID=$!

# –ó–∞–ø—É—Å–∫–∞–µ–º Celery Beat –≤ —Ñ–æ–Ω–µ
echo "‚è∞ Starting Celery Beat..."
celery -A xxl_orderhub beat --loglevel=info &
BEAT_PID=$!

# –°–æ—Ö—Ä–∞–Ω—è–µ–º PID –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
echo $DJANGO_PID > django.pid
echo $WORKER_PID > worker.pid
echo $BEAT_PID > beat.pid

echo ""
echo "üéâ All services started successfully!"
echo ""
echo "Services:"
echo "  üåê Django Server: http://localhost:8000 (PID: $DJANGO_PID)"
echo "  üë∑ Celery Worker: PID $WORKER_PID"
echo "  ‚è∞ Celery Beat: PID $BEAT_PID"
echo "  üî¥ Redis: localhost:6379"
echo ""
echo "To stop all services, run: ./stop_services.sh"
echo "To check status, run: python manage.py celery_status"
echo ""
echo "Press Ctrl+C to stop this script (services will continue running)"
echo ""

# –ñ–¥–µ–º —Å–∏–≥–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap 'echo "Stopping services..."; kill $DJANGO_PID $WORKER_PID $BEAT_PID 2>/dev/null; rm -f *.pid; exit 0' INT

# –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
wait

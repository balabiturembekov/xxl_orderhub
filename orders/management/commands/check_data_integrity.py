from django.core.management.base import BaseCommand
from orders.models import Country, Factory, Order


class Command(BaseCommand):
    help = '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Å–∏—Å—Ç–µ–º–µ'

    def handle(self, *args, **options):
        self.stdout.write('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö...')
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        countries_count = Country.objects.count()
        factories_count = Factory.objects.count()
        orders_count = Order.objects.count()
        
        self.stdout.write(f'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö:')
        self.stdout.write(f'   ‚Ä¢ –°—Ç—Ä–∞–Ω: {countries_count}')
        self.stdout.write(f'   ‚Ä¢ –§–∞–±—Ä–∏–∫: {factories_count}')
        self.stdout.write(f'   ‚Ä¢ –ó–∞–∫–∞–∑–æ–≤: {orders_count}')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑—ã –±–µ–∑ —Ñ–∞–±—Ä–∏–∫
        orphaned_orders = Order.objects.filter(factory__isnull=True).count()
        if orphaned_orders > 0:
            self.stdout.write(
                self.style.ERROR(f'‚ùå –ù–∞–π–¥–µ–Ω–æ {orphaned_orders} –∑–∞–∫–∞–∑–æ–≤ –±–µ–∑ —Ñ–∞–±—Ä–∏–∫!')
            )
        else:
            self.stdout.write(
                self.style.SUCCESS('‚úÖ –í—Å–µ –∑–∞–∫–∞–∑—ã –∏–º–µ—é—Ç —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ñ–∞–±—Ä–∏–∫–∏')
            )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–±—Ä–∏–∫–∏ –±–µ–∑ —Å—Ç—Ä–∞–Ω
        orphaned_factories = Factory.objects.filter(country__isnull=True).count()
        if orphaned_factories > 0:
            self.stdout.write(
                self.style.ERROR(f'‚ùå –ù–∞–π–¥–µ–Ω–æ {orphaned_factories} —Ñ–∞–±—Ä–∏–∫ –±–µ–∑ —Å—Ç—Ä–∞–Ω!')
            )
        else:
            self.stdout.write(
                self.style.SUCCESS('‚úÖ –í—Å–µ —Ñ–∞–±—Ä–∏–∫–∏ –∏–º–µ—é—Ç —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω—ã')
            )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã —Ñ–∞–±—Ä–∏–∫
        from django.db.models import Count
        duplicate_factories = Factory.objects.values('name').annotate(
            count=Count('name')
        ).filter(count__gt=1)
        
        if duplicate_factories.exists():
            self.stdout.write(
                self.style.WARNING(f'‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç—ã —Ñ–∞–±—Ä–∏–∫:')
            )
            for factory in duplicate_factories:
                self.stdout.write(f'   ‚Ä¢ {factory["name"]}: {factory["count"]} —Ä–∞–∑')
        else:
            self.stdout.write(
                self.style.SUCCESS('‚úÖ –î—É–±–ª–∏–∫–∞—Ç–æ–≤ —Ñ–∞–±—Ä–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
            )
        
        self.stdout.write(
            self.style.SUCCESS('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
        )
